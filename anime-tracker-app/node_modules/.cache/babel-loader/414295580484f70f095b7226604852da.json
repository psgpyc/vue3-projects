{"remainingRequest":"/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/node_modules/babel-loader/lib/index.js!/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/src/components/CardContents.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/src/components/CardContents.vue","mtime":1667576879840},{"path":"/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/babel.config.js","mtime":1667537381490},{"path":"/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/node_modules/cache-loader/dist/cjs.js","mtime":1667537366257},{"path":"/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/node_modules/babel-loader/lib/index.js","mtime":1667537367729},{"path":"/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/node_modules/cache-loader/dist/cjs.js","mtime":1667537366257},{"path":"/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/node_modules/vue-loader-v16/dist/index.js","mtime":1667537367614}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbImFuaW1lbGlzdCIsICJpZCIsICJpbWFnZWxpbmsiLCAiYWx0dGV4dCIsICJoZWFkaW5nIiwgInBhcmFncmFwaCIsICJlcGlzb2RlQ291bnQiLCAiY3VycmVudEVwaXNvZGUiLCAibGlzdF90eXBlIl0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzRGlzYWJsZWQ6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlRXBpc29kZUNvdW50KGluY2RlYywgaWQpIHsKICAgICAgaWYgKGluY2RlYyA9PT0gImluYyIpIHsKICAgICAgICB0aGlzLiRlbWl0KCJ1cGRhdGUtZXBpc29kZS1jb3VudCIsICJpbmMiLCBpZCk7CiAgICAgIH0gZWxzZSBpZiAoaW5jZGVjID09PSAiZGVjIikgewogICAgICAgIHRoaXMuJGVtaXQoInVwZGF0ZS1lcGlzb2RlLWNvdW50IiwgImRlYyIsIGlkKTsKICAgICAgfQogICAgfSwKICAgIGFkZEFuaW1lVG9MaXN0KCkgewogICAgICBjb25zdCBjdXJyZW50X2FuaW1lID0gewogICAgICAgIGlkOiB0aGlzLmlkLAogICAgICAgIGltYWdlbGluazogdGhpcy5pbWFnZWxpbmssCiAgICAgICAgYWx0dGV4dDogdGhpcy5hbHR0ZXh0LAogICAgICAgIGhlYWRpbmc6IHRoaXMuaGVhZGluZywKICAgICAgICBwYXJhZ3JhcGg6IHRoaXMucGFyYWdyYXBoLAogICAgICAgIGVwaXNvZGVfY291bnQ6IHRoaXMuZXBpc29kZUNvdW50LAogICAgICAgIGN1cnJlbnRfZXBpc29kZTogdGhpcy5jdXJyZW50RXBpc29kZQogICAgICB9OwogICAgICB0aGlzLiRlbWl0KCJhZGQtYW5pbWUtdG8tbXktbGlzdCIsIGN1cnJlbnRfYW5pbWUpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRydW5jYXRlU3RyaW5nKCkgewogICAgICBpZiAodGhpcy5wYXJhZ3JhcGgubGVuZ3RoIDwgNDAwKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucGFyYWdyYXBoOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLnBhcmFncmFwaC5zdWJzdHJpbmcoMCwgNDAwKTsKICAgIH0sCiAgICBnZXREaXNhYmxlZFN0YXR1cygpIHsKICAgICAgY29uc3QgaXNJbkxpc3QgPSB0aGlzLmFuaW1lbGlzdC5maW5kKGVhY2hBbmltZSA9PiBlYWNoQW5pbWUuaWQgPT09IHRoaXMuaWQpOwogICAgICBjb25zb2xlLmxvZyhpc0luTGlzdCk7CiAgICAgIHJldHVybiBpc0luTGlzdDsKICAgIH0KICB9Cn07"},{"version":3,"mappings":"AAyCA,eAAe;EACbA,KAAK,EAAE,CACL,WAAW,EACX,IAAI,EACJ,WAAW,EACX,SAAS,EACT,SAAS,EACT,WAAW,EACX,cAAc,EACd,gBAAgB,EAChB,WAAW,CACZ;EACDC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkB,CAACC,MAAM,EAAEC,EAAE,EAAE;MAC7B,IAAID,MAAK,KAAM,KAAK,EAAE;QACpB,IAAI,CAACE,KAAK,CAAC,sBAAsB,EAAE,KAAK,EAAED,EAAE,CAAC;MAC/C,OAAO,IAAID,MAAK,KAAM,KAAK,EAAE;QAC3B,IAAI,CAACE,KAAK,CAAC,sBAAsB,EAAE,KAAK,EAAED,EAAE,CAAC;MAC/C;IACF,CAAC;IACDE,cAAc,GAAG;MACf,MAAMC,aAAY,GAAI;QACpBH,EAAE,EAAE,IAAI,CAACA,EAAE;QACXI,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,aAAa,EAAE,IAAI,CAACC,YAAY;QAChCC,eAAe,EAAE,IAAI,CAACC;MACxB,CAAC;MACD,IAAI,CAACV,KAAK,CAAC,sBAAsB,EAAEE,aAAa,CAAC;IACnD;EACF,CAAC;EACDS,QAAQ,EAAE;IACRC,cAAc,GAAG;MACf,IAAI,IAAI,CAACN,SAAS,CAACO,MAAK,GAAI,GAAG,EAAE;QAC/B,OAAO,IAAI,CAACP,SAAS;MACvB;MACA,OAAO,IAAI,CAACA,SAAS,CAACQ,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;IACzC,CAAC;IACDC,iBAAiB,GAAG;MAClB,MAAMC,QAAO,GAAI,IAAI,CAACC,SAAS,CAACC,IAAI,CACjCC,SAAS,IAAKA,SAAS,CAACpB,EAAC,KAAM,IAAI,CAACA,EAAC,CACvC;MACDqB,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACrB,OAAOA,QAAQ;IACjB;EACF;AACF,CAAC","names":["props","data","isDisabled","methods","updateEpisodeCount","incdec","id","$emit","addAnimeToList","current_anime","imagelink","alttext","heading","paragraph","episode_count","episodeCount","current_episode","currentEpisode","computed","truncateString","length","substring","getDisabledStatus","isInList","animelist","find","eachAnime","console","log"],"sourceRoot":"","sources":["/Users/paritoshsharmaghimire/xprojectx/vue-js/vue-slots/src/components/CardContents.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"card-content-wrap\">\n      <img class=\"class-img\" :src=\"require(`../assets/${imagelink}`)\" />\n      <div class=\"anime-details\">\n        <h4>{{ heading }}</h4>\n        <p>{{ truncateString }}</p>\n      </div>\n    </div>\n    <div v-if=\"list_type === 'my_anime'\" class=\"anime-watch-count-wrap\">\n      <button\n        class=\"anime-watch-count-button\"\n        @click=\"updateEpisodeCount('inc', id)\"\n        type=\"button\"\n      >\n        +\n      </button>\n      <p>{{ currentEpisode }} / {{ episodeCount }}</p>\n      <button\n        class=\"anime-watch-count-button\"\n        @click=\"updateEpisodeCount('dec', id)\"\n        type=\"button\"\n      >\n        -\n      </button>\n    </div>\n    <div v-else class=\"anime-watch-add-wrap\">\n      <button\n        :disabled=\"getDisabledStatus\"\n        class=\"anime-watch-add-button\"\n        type=\"button\"\n        @click=\"addAnimeToList\"\n      >\n        Add to my Anime List\n      </button>\n    </div>\n  </section>\n  <!-- <button class=\"add-to-anime\" type=\"button\">ADD TO MY ANIME</button> -->\n</template>\n\n<script>\nexport default {\n  props: [\n    \"animelist\",\n    \"id\",\n    \"imagelink\",\n    \"alttext\",\n    \"heading\",\n    \"paragraph\",\n    \"episodeCount\",\n    \"currentEpisode\",\n    \"list_type\",\n  ],\n  data() {\n    return {\n      isDisabled: false,\n    };\n  },\n  methods: {\n    updateEpisodeCount(incdec, id) {\n      if (incdec === \"inc\") {\n        this.$emit(\"update-episode-count\", \"inc\", id);\n      } else if (incdec === \"dec\") {\n        this.$emit(\"update-episode-count\", \"dec\", id);\n      }\n    },\n    addAnimeToList() {\n      const current_anime = {\n        id: this.id,\n        imagelink: this.imagelink,\n        alttext: this.alttext,\n        heading: this.heading,\n        paragraph: this.paragraph,\n        episode_count: this.episodeCount,\n        current_episode: this.currentEpisode,\n      };\n      this.$emit(\"add-anime-to-my-list\", current_anime);\n    },\n  },\n  computed: {\n    truncateString() {\n      if (this.paragraph.length < 400) {\n        return this.paragraph;\n      }\n      return this.paragraph.substring(0, 400);\n    },\n    getDisabledStatus() {\n      const isInList = this.animelist.find(\n        (eachAnime) => eachAnime.id === this.id\n      );\n      console.log(isInList);\n      return isInList;\n    },\n  },\n};\n</script>\n\n<style scoped>\nsection {\n  position: relative;\n}\n.card-content-wrap {\n  display: flex;\n  justify-content: space-between;\n}\n\n.class-img {\n  height: 150px;\n  width: 120px;\n  border-radius: 10px;\n  margin-right: 20px;\n}\n\n.anime-details {\n  flex: 3;\n  text-align: left;\n}\n\n.add-to-anime {\n  height: 20px;\n  float: right;\n  /* margin: -20px 0; */\n  cursor: pointer;\n}\n\n.anime-watch-count-wrap {\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  position: absolute;\n  top: 70%;\n  left: 67%;\n}\n\n.anime-watch-count-button {\n  width: 50px;\n  height: 30px;\n  cursor: pointer;\n  margin: 0 20px;\n}\n\n.anime-watch-add-wrap {\n  display: flex;\n  justify-content: end;\n}\n.anime-watch-add-button {\n  height: 30px;\n  cursor: pointer;\n}\n</style>\n"]}]}